generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  firstName  String    @db.VarChar(50)
  lastName   String    @db.VarChar(50)
  profile   String?    @db.VarChar(150)
  email      String    @unique @db.VarChar(50)
  phone      String?   @db.VarChar(20)
  address    String   @db.VarChar(100)
  password   String    @db.VarChar(100)
  status     Int       @default(1)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  movies     Movie[]   @relation("CreatedBy")
  ratings    Rate[]    @relation("RatedBy")
}

model Movie {
  id           Int       @id @default(autoincrement())
  title        String    @db.VarChar(255)
  image        String    @db.VarChar(255)
  description  String?   @db.VarChar(2000)
  releaseDate  Int?      
  duration     Int?
  createdBy    Int    
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  user         User      @relation("CreatedBy", fields: [createdBy], references: [id])
  ratings      Rate[]    @relation("MovieRated") // Remove onDelete: Cascade
  genres       MovieGenre[]
}

model Rate {
  id         Int       @id @default(autoincrement())
  score      Float
  movieId    Int
  userId     Int
  createdAt  DateTime  @default(now())
  
  movie      Movie     @relation("MovieRated", fields: [movieId], references: [id], onDelete: Cascade) // Keep onDelete: Cascade here
  user       User      @relation("RatedBy", fields: [userId], references: [id], onDelete: Cascade) // Optional: Cascade on user as well

  @@unique([userId, movieId]) // Enforces the unique constraint
}


model Genre {
  id      Int         @id @default(autoincrement())
  name    String      @unique
  movies  MovieGenre[]
}

model MovieGenre {
  movieId  Int
  genreId  Int
  movie    Movie   @relation(fields: [movieId], references: [id], onDelete: Cascade)
  genre    Genre   @relation(fields: [genreId], references: [id], onDelete: Cascade)

  @@id([movieId, genreId]) // Composite primary key
}